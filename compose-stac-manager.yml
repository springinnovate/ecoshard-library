version: '3.2'
services:
  geoserver-node:
    container_name: geoserver-node
    build: docker_contexts/geoserver_node_docker
    networks:
      - api_stac_nw
    volumes:
      - ${HOST_GEOSERVER_DATA_DRIVE}:/opt/tomcat/webapps/geoserver/data
    command: ['${GEOSERVER_MAX_RAM}']
    tty: true

  stac-manager:
    container_name: stac-manager
    build: docker_contexts/stac-api-docker
    ports:
      - 8888:8888
    volumes:
      - /mnt/geoserver_data:/usr/local/geoserver/data_dir
    networks:
      - api_stac_nw
    tty: true
    depends_on:
      - geoserver-node

  nginx:
    image: "nginx:1.13.5"
    container_name: "nginx"
    command: [nginx-debug, '-g', 'daemon off;']
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx_configurations/stac_api_nginx_conf:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - api_stac_nw
    depends_on:
      - stac-manager

  db:
    image: postgres
    container_name: ${DB_HOST}
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    networks:
      - api_stac_nw

  expand-drive-service:
    container_name: expand_drive_service
    restart: always
    networks:
      - api_stac_nw
    devices:
      - ${DISK_RESIZE_SERVICE_DEVICE_NAME}:${DISK_RESIZE_SERVICE_DEVICE_NAME}
    command: [
      '--app_port', '${DISK_RESIZE_SERVICE_APP_PORT}',
      '--disk_name', '${DISK_RESIZE_SERVICE_DISK_NAME}',
      '--device_name', '${DISK_RESIZE_SERVICE_DEVICE_NAME}',
      '--zone', '${DISK_RESIZE_SERVICE_ZONE}',
      '--max_size_gb', '${DISK_RESIZE_SERVICE_MAX_SIZE_GB}',
      '--project', '${DISK_RESIZE_SERVICE_PROJECT}'
      ]

  test:
    container_name: test
    build: docker_contexts/test_docker
    networks:
      - api_stac_nw
    tty: true
    depends_on:
      - db
    command: ['${DB_USER}', '${DB_PASSWORD}', 'db:5432']

networks:
  api_stac_nw:
    driver: bridge
