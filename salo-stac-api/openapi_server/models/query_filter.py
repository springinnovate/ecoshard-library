# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.query_prop import QueryProp
from openapi_server import util

from openapi_server.models.query_prop import QueryProp  # noqa: E501

class QueryFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query=None):  # noqa: E501
        """QueryFilter - a model defined in OpenAPI

        :param query: The query of this QueryFilter.  # noqa: E501
        :type query: Dict[str, QueryProp]
        """
        self.openapi_types = {
            'query': Dict[str, QueryProp]
        }

        self.attribute_map = {
            'query': 'query'
        }

        self._query = query

    @classmethod
    def from_dict(cls, dikt) -> 'QueryFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The queryFilter of this QueryFilter.  # noqa: E501
        :rtype: QueryFilter
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query(self):
        """Gets the query of this QueryFilter.

        Define which properties to query and the operatations to apply  # noqa: E501

        :return: The query of this QueryFilter.
        :rtype: Dict[str, QueryProp]
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this QueryFilter.

        Define which properties to query and the operatations to apply  # noqa: E501

        :param query: The query of this QueryFilter.
        :type query: Dict[str, QueryProp]
        """

        self._query = query
